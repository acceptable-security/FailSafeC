(* 
   Part of Fail-Safe C Compiler. Produced by Yutaka Oiwa.
   (c) 2001-2005 Yutaka Oiwa.
   (c) 2005-2007 AIST.

   This file is written by Yutaka Oiwa in 2003-2004. *)

(** The architecture configuration used for Fail-Safe C. *)

(** The implementation for this module will be automatically generated by the build system. *)

val bits_of_byte : int
val sizeof_char : int
val sizeof_short : int
val sizeof_int : int
val sizeof_long : int
val sizeof_longlong : int
val sizeof_float : int
val sizeof_double : int
val sizeof_longdouble : int
val sizeof_pointer : int

val minimum_align_struct : int
val max_bitfield_width : int

val char_is_signed : bool
val is_littleendian : bool
(** the names suggest. *)

val emit_downcoerce_longdouble : bool
(** [true] means that the current Fail-Safe C compiler translates long double into double type. *)

val print_config : unit -> unit
(** prints the diagnostic message. *)

val calculate_bitfields_packing :
  int list -> (int * int) list * int * int
(** given a list of bit field sizes, computes the packing of the fields. *)

val cpp_options : string

val allow_integer_arith_on_pointer : bool

type quomod_style = 
    Div_round_to_zero | Mod_match_divisor | Mod_always_positive

val quomod_style : quomod_style
(** The computation style of [%] and [/] operators for negative arguments in native C. *)

val size_check_subsumes_cast_check : bool
(** Whether the implementation supports simultaneous checking of bounds and cast flags. *)
val use_hardware_null_check : bool
(** Whether the implementation reliablity reports SIGSEGV for null-pointer operations. *)
