## src.manifest.ec: a manifest for C-implemented standard libraries.
## Manifest generation is now handled by make-manifest.pl.
##
##
## Notice on implementation requirements:
##
## To ensure correct linking, the Fail-Safe C linker must know every
## modules with FSC symbols that are to be included to output.
## You must avoid the situation that FSC linker decided not to link
## some module in an archive, but the native linker decides to link it.
## Modules without any FSC symbols are exempt from this rule.
##
## One possible cause of such situation is a helper function contained
## in a module and referenced from other module.
##
## To ensure this, each module in the archive must satisfy one of the
## following properties:
##
##  (1) It is generated by Fail-Safe C compiler.
##  (2) All external (global non-static) symbols are Fail-Safe C
##	symbols for functions and values.
##  (3) Or, if it has any native symbols, it does not have
##	Fail-Safe C external symbols.
##  (4) It is guaranteed to be always considered by the FSC linker
##	(e.g. having Force-linking property, or being referenced
##	 from such modules.)
##  (5) There is a FSC symbol corresponding to native symbols, and
##	all modules referring to the native symbols are ensured to
##	have a reference to such FSC symbol in the manifest entry.
##	(avoid this if possible, as it is error-prone.)
##
##  For a sample of (4), see main_bootstrap.fscw, env_helper.fscw and
##  fileptr.c.
##
##  Double-sharps introduce comments (only) in this file.
##
R	2	ABI=6,6	Stdlib-impl
D	__builtin_va_start	F_Pi
D	__builtin_va_end	FPi_v
D	__builtin_setjmp	FPPv_i
D	__builtin_sigsetjmp	FPPvi_i
TSS	Sn10stdio_FILE_	FILE
TSS	Sn22stdlib_private_storage_	_private_storage
TSS	Sn12stdlib_errno_	__errno_t
TSS	Sn14stdlib_h_errno_	__h_errno_t
TI	PSn10stdio_FILE_
TI	PPc
D	fputs	FPcPSn10stdio_FILE__i
D	puts	FPc_i
D	fputc	FiPSn10stdio_FILE__i
D	putchar	Fi_i
D	vfprintf	FPSn10stdio_FILE_PcPi_i
D	fprintf	FPSn10stdio_FILE_PcV_i
D	sprintf	FPcPcV_i
D	vprintf	FPcPi_i
D	vsprintf	FPcPcPi_i
D	printf	FPcV_i
D	snprintf	FPciPcV_i
D	vsnprintf	FPciPcPi_i
D	fscanf	FPSn10stdio_FILE_PcV_i
D	sscanf	FPcPcV_i
D	scanf	FPcV_i
D	vfscanf	FPSn10stdio_FILE_PcPi_i
D	vscanf	FPcPi_i
D	vsscanf	FPcPcPi_i
D	fgetc	FPSn10stdio_FILE__i
D	gets	FPc_Pc
D	fgets	FPciPSn10stdio_FILE__Pc
D	getchar	F_i
D	ungetc	FiPSn10stdio_FILE__i
D	free	FPv_v
D	malloc_typed	FiPv_Pv
D	alloca	Fi_Pv
D	malloc	Fi_Pv
D	realloc	FPvi_Pv
D	calloc	Fii_Pv
D	perror	FPc_v
D	fclose	FPSn10stdio_FILE__i
D	ftell	FPSn10stdio_FILE__i
D	pclose	FPSn10stdio_FILE__i
D	fseek	FPSn10stdio_FILE_ii_i
D	fopen	FPcPc_PSn10stdio_FILE_
D	popen	FPcPc_PSn10stdio_FILE_
D	fread	FPviiPSn10stdio_FILE__i
D	fwrite	FPviiPSn10stdio_FILE__i
D	fgetpos	FPSn10stdio_FILE_PSn13stdlib_fpos_t__i
D	fsetpos	FPSn10stdio_FILE_PSn13stdlib_fpos_t__i
D	strstr	FPcPc_Pc
E	__strstr	FPcPc_Pc
D	strlen	FPc_i
D	isalnum	Fi_i
D	isalpha	Fi_i
D	isascii	Fi_i
D	isblank	Fi_i
D	iscntrl	Fi_i
D	isdigit	Fi_i
D	isgraph	Fi_i
D	islower	Fi_i
D	isprint	Fi_i
D	ispunct	Fi_i
D	isspace	Fi_i
D	isupper	Fi_i
D	isxdigit	Fi_i
D	tolower	Fi_i
D	toupper	Fi_i
D	_tolower	Fi_i
D	_toupper	Fi_i
D	toascii	Fi_i
D	abs	Fi_i
D	atof	FPc_d
D	memmove	FPvPvi_Pv
D	memcpy	FPvPvi_Pv
D	bzero	FPvi_v
D	bcopy	FPvPvi_v
D	stderr	PSn10stdio_FILE_
D	stdin	PSn10stdio_FILE_
D	stdout	PSn10stdio_FILE_
D	__errno	F_Pi
D	__h_errno	F_Pi
D	longjmp	FPPvi_v
D	siglongjmp	FPPvi_v
D	wait	FPi_i
D	waitpid	FiPii_i
D	read	FiPvi_i
D	write	FiPvi_i
D	pread	FiPvii_i
D	pwrite	FiPvii_i
D	pipe	FPi_i
D	fdopen	FiPc_PSn10stdio_FILE_
D	feof	FPSn10stdio_FILE__i
D	ferror	FPSn10stdio_FILE__i
D	fflush	FPSn10stdio_FILE__i
D	fileno	FPSn10stdio_FILE__i
D	strerror	Fi_Pc
D	connect	FiPSn15stdlib_sockaddr_i_i
D	ftime	FPSn12stdlib_timeb__i
D	open	FPciV_i
D	memset	FPvii_Pv
D	ioctl	FiiV_i
D	strtoul	FPcPPci_i
D	access	FPci_i
D	accept	FiPSn15stdlib_sockaddr_Pi_i
D	bind	FiPSn15stdlib_sockaddr_i_i
D	getsockname	FiPSn15stdlib_sockaddr_Pi_i
D	getpeername	FiPSn15stdlib_sockaddr_Pi_i
D	getsockopt	FiiiPvPi_i
D	setsockopt	FiiiPvi_i
D	recvfrom	FiPviiPSn15stdlib_sockaddr_Pi_i
D	sendto	FiPviiPSn15stdlib_sockaddr_i_i
D	recvmsg	FiPSn13stdlib_msghdr_i_i
D	sendmsg	FiPSn13stdlib_msghdr_i_i
D	rename	FPcPc_i
D	symlink	FPcPc_i
D	unlink	FPc_i
D	send	FiPvii_i
D	recv	FiPvii_i
D	closelog	F_v
D	openlog	FPcii_v
D	setlogmask	Fi_i
D	syslog	FiPcV_v
D	setvbuf	FPSn10stdio_FILE_Pcii_i
D	strtol	FPcPPci_i
D	strtoll	FPcPPci_q
D	closedir	FPSn10stdio_FILE__i
D	opendir	FPc_PSn10stdio_FILE_
D	readdir	FPSn10stdio_FILE__PSn14__stdio_dirent_
D	seekdir	FPSn10stdio_FILE_i_v
D	telldir	FPSn10stdio_FILE__i
D	fcntl	FiiV_i
D	readlink	FPcPci_i
D	getrlimit	FiPSn13stdlib_rlimit__i
D	setrlimit	FiPSn13stdlib_rlimit__i
D	initgroups	FPci_i
D	getgroups	FiPi_i
D	setgroups	FiPi_i
D	getcwd	FPci_Pc
D	gethostname	FPci_i
D	chdir	FPc_i
D	chroot	FPc_i
D	writev	FiPSn12stdlib_iovec_i_i
D	readv	FiPSn12stdlib_iovec_i_i
D	getdtablesize	F_i
D	inet_addr	FPc_i
D	inet_ntoa	FSn14stdlib_in_addr__Pc
D	setlocale	FiPc_Pc
D	rewinddir	FPSn10stdio_FILE__v
D	remove	FPc_i
D	clearerr	FPSn10stdio_FILE__v
D	truncate	FPci_i
D	mkdir	FPci_i
D	link	FPcPc_i
D	if_nametoindex	FPc_i
D	utimes	FPcPSn21stdlib_select_timeval__i
E	signgam	i	##  required from math_2.fscw: TODO
E	__fsc_set_system_env	FPc_v	##  required from locale.c and other fscw-generated routines.
E	environ	PPc	##  to make sure main_globalvars.safe.o is linked.
E	__progname	Pc	## to make sure main_globalvars.safe.o is linked.
E	strchr	FPci_Pc
