/* -*- C -*- */
/* 
   Part of Fail-Safe C Runtime. Produced by Yutaka Oiwa.
   (c) 2001-2005 Yutaka Oiwa.
   (c) 2005-2006 AIST.
   (c) 2006	 Lepidum Co. Ltd.

   This file is written by Lepidum Co. Ltd. and Yutaka OIWA in 2006, 2009.

   This file is distributed under Apache License 2.0 with a special exception.
   See the file LICENSE contained in the distribution.
*/

%% C-PROLOGUE
#define _XOPEN_SOURCE 600
#include <unistd.h>

%% FSC-PROLOGUE
#include "../../fsc_autoconf.h"

extern
#ifdef HAVE_LIBCRYPT
__fsc_attribute__((require_native_libraries "crypt"))
#endif
  char *crypt(const char *key, const char *salt);

%% REQUIRED-DECLS

require_function crypt;

%% NATIVE-IMPLEMENTATION

fscw_pointer fscw_crypt(fscw_string_param(key),
			fscw_string_param(salt))
{
    void *t1, *t2;
    char *key  = wrapper_get_string_z(key_base, key_ofs, &t1, "crypt");
    char *salt = wrapper_get_string_zn(salt_base, salt_ofs, &t2, 2, "crypt");
    if (salt[0] == '$') {
	wrapper_release_tmpbuf(t2);
	salt = wrapper_get_string_z(salt_base, salt_ofs, &t2, "crypt");
    }
    char *ret = crypt(key, salt);
    wrapper_release_tmpbuf(t1);
    wrapper_release_tmpbuf(t2);
    return wrapper_make_new_static_string(ret);
}

