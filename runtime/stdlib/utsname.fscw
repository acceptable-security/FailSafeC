/* -*- C -*- */
/* Part of Fail-Safe C Runtime. Produced by Yutaka Oiwa.
   (c) 2001-2005 Yutaka Oiwa.
   (c) 2005-2009 AIST.
   (c) 2006	 Lepidum Co. Ltd.

   This file is written by Yutaka Oiwa in 2004, 2009.

   This file is distributed under Apache License 2.0 with a special exception.
   See the file LICENSE contained in the distribution.
*/
/**
 * @file stdlib/time.c
 */

%% C-PROLOGUE

#include <sys/utsname.h>
#include <string.h>

%% FSC-PROLOGUE

#include <sys/utsname.h>

%% REQUIRED-DECLS

require_function uname;

%% NATIVE-IMPLEMENTATION

#include <copydata.h>
#define UNAME_ELEMSIZE 1024

/**
 * @fn int uname(struct utsname*name)
 * @author Yutaka Oiwa.
 */
fscw_int fscw_uname(base_t base0, ofs_t ofs)
{
    struct utsname buf;
    int r;

    if (fsc_is_nullpointer(base0, ofs)) {
        r = uname(0);
        return value_of_int(r);
    }
    r = uname(&buf);

    if (r == 0) {
	fsc_copy_from_raw(base0, ofs, buf.sysname, strlen(buf.sysname) + 1);
	fsc_copy_from_raw(base0, ofs + UNAME_ELEMSIZE, buf.nodename, strlen(buf.nodename) + 1);
	fsc_copy_from_raw(base0, ofs + UNAME_ELEMSIZE * 2, buf.release, strlen(buf.release) + 1);
	fsc_copy_from_raw(base0, ofs + UNAME_ELEMSIZE * 3, buf.version, strlen(buf.version) + 1);
	fsc_copy_from_raw(base0, ofs + UNAME_ELEMSIZE * 4, buf.machine, strlen(buf.machine) + 1);
    }
    return value_of_int(r);
}
